{"majorversion": 2, "filemap": {"protoQ.js": {"classlist": ["Q", "Q.Class", "Q.Db", "Q.Sql", "Q.Js", "Q.Storage", "Q.Ajax", "Q.Dom", "Q.Dom.Script", "Q.Worker", "Q.Test", "Q.Sql.Read", "Q.Sql.Drop", "Q.Storage.Local", "Q.Storage.Session"], "name": "protoQ.js", "module": "Q"}}, "modules": {"Q": {"description": "The Q module provides a way to use asynchronous features sequentially.\nThis code was validated with <a href=\"http://jslint.com\">JSLint</a> using\noptions: jslint white: true, devel: true, onevar: true, undef: true,\neqeqeq: true, plusplus: true, bitwise: true, regexp: true,\nnewcap: true, immed: true, strict: true\nPredefined: sessionStorage, localStorage, Worker", "submodules": [], "classlist": ["Q", "Q.Class", "Q.Db", "Q.Sql", "Q.Js", "Q.Storage", "Q.Ajax", "Q.Dom", "Q.Dom.Script", "Q.Worker", "Q.Test", "Q.Sql.Read", "Q.Sql.Drop", "Q.Storage.Local", "Q.Storage.Session"], "filelist": ["protoQ.js"], "subdata": {}, "name": "Q"}}, "classmap": {"Q.Js": {"name": "Q.Js", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration.\nAn object containing the options attributes.\nMembers of this options object include:\n<ul>\n<li><strong>function fn:</strong> The function to execute.</li>\n<li><strong>array args:</strong> The arguments to pass to the\nfunction at time of execution.</li>\n</ul>"}], "description": "This class creates objects with a fn property with\ntype {Function}."}], "namespace": "Q", "module": "Q", "methods": {"execute": {"description": "Executes the fn function described by the object's\nconfiguration using the configuration's args array\nas the fn function's arguments.", "guessedname": "execute", "guessedtype": "function"}}, "extends": "Q.Class", "superclass": "Q.Class", "file": "protoQ.js", "shortname": "Js", "description": "This class creates objects with a fn property with\ntype {Function}."}, "Q.Storage.Local": {"name": "Q.Storage.Local", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration."}], "description": "This class creates a localStorage request object"}], "namespace": "Q.Storage", "module": "Q", "extends": "Q.Storage", "superclass": "Q.Storage", "file": "protoQ.js", "shortname": "Local", "description": "This class creates a localStorage request object"}, "Q.Sql.Read": {"name": "Q.Sql.Read", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration.  The tableName property is replaced\nat execution time."}], "description": "This class creates a SQL select * request object"}], "namespace": "Q.Sql", "module": "Q", "extends": "Q.Sql", "superclass": "Q.Sql", "file": "protoQ.js", "shortname": "Read", "description": "This class creates a SQL select * request object"}, "Q.Dom": {"name": "Q.Dom", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration.\nAn object containing the options attributes.\nMembers of this options object include:\n<ul>\n<li><strong>string tagName:</strong> The HTML tag name to create.</li>\n<li><strong>HTMLDomElement parent:</strong> The parent of the object where\nit will be inserted into the DOM.  Functions that return\nelements will be resolved at time of execution.</li>\n<li><strong>object attribute:</strong> Attributes and their values to\nbe applied to the new DOM object.</li>\n<li><strong>object event:</strong> Events to be bound to the new object.\nEvents use their HTML property name (e.g., \"onload\") and have an \"fn\"\nproperty which is the bound function.  \"fn\" property functions will not\nbe resolved at execution time but passed as a function value.</li>\n</ul>"}], "description": "This class creates a request object that will\nbecome a DOM object during execution. The DOM object\nwill have a tag of the tagName property and the\nattributes and events of the attribute and event properties."}], "namespace": "Q", "module": "Q", "methods": {"execute": {"description": "Creates and sends the XMLHttpRequest using the object's\nconfiguration information.", "guessedname": "execute", "guessedtype": "function"}}, "extends": "Q.Class", "superclass": "Q.Class", "file": "protoQ.js", "shortname": "Dom", "description": "This class creates a request object that will\nbecome a DOM object during execution. The DOM object\nwill have a tag of the tagName property and the\nattributes and events of the attribute and event properties."}, "Q.Dom.Script": {"name": "Q.Dom.Script", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration."}], "description": "This class creates a request object that will\nbecome a SCRIPT tag during execution. The SCRIPT\nwill execute the next request object after the\nload event."}], "namespace": "Q.Dom", "module": "Q", "methods": {"scriptHandler": {"return": {"type": "Fuction", "description": ""}, "description": "Advances the request queue once the script loads", "guessedname": "scriptHandler", "guessedtype": "function"}}, "extends": "Q.Dom", "superclass": "Q.Dom", "file": "protoQ.js", "shortname": "Script", "description": "This class creates a request object that will\nbecome a SCRIPT tag during execution. The SCRIPT\nwill execute the next request object after the\nload event."}, "Q.Worker": {"name": "Q.Worker", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration.\nAn object containing the options attributes.\nMembers of this options object include:\n<ul>\n<li><strong>string url:</strong> The url to post a message to.</li>\n<li><strong>number wait:</strong> The number of replies the object\nreceives before advancing the queue.</li>\n<li><strong>string message:</strong> The message sent to the url.</li>\n</ul>"}], "description": "This class creates a request object that will\ncommunicate with an HTML5 web worker."}], "namespace": "Q", "module": "Q", "extends": "Q.Class", "superclass": "Q.Class", "file": "protoQ.js", "shortname": "Worker", "description": "This class creates a request object that will\ncommunicate with an HTML5 web worker."}, "Q": {"name": "Q", "namespace": "", "module": "Q", "guessedname": "Q", "methods": {"getRunning": {"return": {"type": "Boolean", "description": ""}, "description": "Returns the value of running", "guessedname": "getRunning", "guessedtype": "function"}, "setDOMloaded": {"return": {"type": "Boolean", "description": ""}, "params": [{"type": "Boolean", "name": "bool", "description": ""}], "description": "Returns the current state of the queue", "guessedname": "setDOMloaded", "guessedtype": "function"}, "shift": {"return": {"type": "Q", "description": ""}, "description": "Removes and invokes the execute method of\nthe first requests object", "guessedname": "shift", "guessedtype": "function"}, "clear": {"return": {"type": "Q", "description": ""}, "description": "Removes all objects from the requests array", "guessedname": "clear", "guessedtype": "function"}, "stop": {"return": {"type": "Q", "description": ""}, "description": "Stops execution of queue request objects", "guessedname": "stop", "guessedtype": "function"}, "getRequests": {"return": {"type": "Array", "description": ""}, "description": "Returns array of requests", "guessedname": "getRequests", "guessedtype": "function"}, "start": {"return": {"type": "Q", "description": ""}, "description": "Sets running to true and creates an execute event", "guessedname": "start", "guessedtype": "function"}, "length": {"return": {"type": "Number", "description": ""}, "description": "Returns the length of the requests array", "guessedname": "length", "guessedtype": "function"}, "mixin": {"return": {"type": "Object", "description": "the modified first object parameter"}, "params": [{"type": "Object", "name": "object", "description": "  any number of objects"}], "description": "Utility function mixes the properties of objects\nresolving conflicts through overwrites.  The objects\npassed last have the highest priority.", "guessedname": "mixin", "guessedtype": "function"}, "push": {"return": {"type": "Q", "description": ""}, "description": "Pushes an object into the requests array", "guessedname": "push", "guessedtype": "function"}, "event": {"return": {"type": "Object", "description": "the event requestor"}, "params": [{"type": "String", "name": "type", "description": ""}, {"type": "Object", "name": "context", "description": "  the event requestor"}], "description": "Utility function creates and dispatches an event", "guessedname": "event", "guessedtype": "function"}, "setRunning": {"return": {"type": "Boolean", "description": ""}, "params": [{"type": "Boolean", "name": "bool", "description": ""}], "description": "Sets the value of running", "guessedname": "setRunning", "guessedtype": "function"}}, "static": "", "file": "protoQ.js", "guessedtype": "function", "shortname": "Q", "properties": {"DOMloaded": {"guessedname": "DOMloaded", "type": "{Boolean}", "description": "Returns the current state of the DOM", "private": "", "guessedtype": "property"}, "win": {"type": "{DOMWindow}", "description": "Reference to the window object", "guessedname": "win", "guessedtype": "property"}, "requests": {"type": "{Array}", "description": "Queue of objects", "guessedname": "requests", "guessedtype": "property"}, "running": {"guessedname": "running", "type": "{Boolean}", "description": "Returns the current state of the queue", "private": "", "guessedtype": "property"}, "doc": {"type": "{Document}", "description": "Reference to the window.document object", "guessedname": "doc", "guessedtype": "property"}}, "description": "The easing module provides methods for customizing\nhow an animation behaves during each run."}, "Q.Class": {"name": "Q.Class", "for": "Q", "innerClasses": ["Q"], "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options parameter\noverrides default configuration"}], "description": "The core class for Q.  This constructor can be\ncalled like a function with an optional options parameter\nwhich overrides default configuration."}, {"description": "This class factory creates a subclass constructor with this instance\nas a __super__ property of the new class, inheriting this instance's\nprototype and configuration.\nThe new class constructor can be invoked like a function and will\naccept an options parameter which can override default configuration."}, {"description": "This class factory creates a subclass constructor with this instance\nas a __super__ property of the new class, inheriting this instance's\nprototype and configuration.\nThe new class will use a singleton pattern (only allowing one\ninstance to be created). The new class constructor can be invoked\nlike a function and will accept an options parameter which can\noverride default configuration.\nSingletons are not added to the request queue."}, {"description": "This class factory creates a subclass constructor with this instance\nas a __super__ property of the new class, inheriting this instance's\nprototype and configuration.\nThe new class will use a multiton pattern (allowing global access to\nall instances). The new class constructor can be invoked\nlike a function and will accept an options parameter which can\noverride default configuration.\nTo reference instances of a multiton, use the constructor.instance array.\nexample: Q.Test.instance[0]"}], "namespace": "Q", "module": "Q", "events": {"request": {"type": "Event.UIEvents", "description": "This event invokes the instance's request method\nupon instantiation"}}, "guessedname": "Class", "methods": {"execute": {"description": "Removes the first request from the queue", "guessedname": "execute", "guessedtype": "function"}, "configure": {"return": {"type": "Object", "description": "dynamically bound configuration"}, "description": "Configures an object before execution", "guessedname": "configure", "guessedtype": "function"}, "fire": {"description": "Adds this instance to the request queue\nand executes the first request in the queue.", "guessedname": "fire", "guessedtype": "function"}, "clone": {"parameter": "options {Object}", "return": {"type": "Object", "description": "instance of Class"}, "description": "Creates a new instance with the same configuration\nor a mix of this configuration and the options parameter.", "guessedname": "clone", "guessedtype": "function"}, "request": {"return": {"type": "Object", "description": "instance"}, "description": "Add the instance to the requests queue", "guessedname": "request", "guessedtype": "function"}, "singleton": {"params": [{"type": "String", "name": "name", "description": "  the reference to the new class"}, {"type": "Object", "name": "defaults", "description": "  the default configuration for new\ninstances of the new class"}], "description": "This class factory creates a subclass constructor with this instance\nas a __super__ property of the new class, inheriting this instance's\nprototype and configuration.\nThe new class will use a singleton pattern (only allowing one\ninstance to be created). The new class constructor can be invoked\nlike a function and will accept an options parameter which can\noverride default configuration.\nSingletons are not added to the request queue.", "guessedname": "singleton", "guessedtype": "function"}, "subClass": {"params": [{"type": "String", "name": "name", "description": "  the reference to the new class"}, {"type": "Object", "name": "defaults", "description": "  the default configuration for new\ninstances of the new class"}], "description": "This class factory creates a subclass constructor with this instance\nas a __super__ property of the new class, inheriting this instance's\nprototype and configuration.\nThe new class constructor can be invoked like a function and will\naccept an options parameter which can override default configuration.", "guessedname": "subClass", "guessedtype": "function"}, "start": {"return": {"type": "Q", "description": ""}, "description": "Starts executing the queue requests", "guessedname": "start", "guessedtype": "function"}, "multiton": {"params": [{"type": "String", "name": "name", "description": "  the reference to the new class"}, {"type": "Object", "name": "defaults", "description": "  the default configuration for new\ninstances of the new class"}], "description": "This class factory creates a subclass constructor with this instance\nas a __super__ property of the new class, inheriting this instance's\nprototype and configuration.\nThe new class will use a multiton pattern (allowing global access to\nall instances). The new class constructor can be invoked\nlike a function and will accept an options parameter which can\noverride default configuration.\nTo reference instances of a multiton, use the constructor.instance array.\nexample: Q.Test.instance[0]", "guessedname": "multiton", "guessedtype": "function"}, "expand": {"return": {"type": "Object", "description": "returns the modified base object"}, "description": "Copies properties from obj to c except functions that\nare not values of an \"fn\" property.  Non-\"fn\" functions\nare invoked with the Class instance's context.", "private": "", "params": [{"type": "Object", "name": "c", "description": "  base config object"}, {"type": "Object", "name": "obj", "description": "  properties to copy/invoke"}], "guessedname": "expand", "guessedtype": "function"}}, "file": "protoQ.js", "guessedtype": "function", "shortname": "Class", "properties": {"name": {"protected": "", "type": "{String}", "description": "The name of this class.  Useful for identifying\nconstructors and parents of objects by class name", "guessedname": "name", "guessedtype": "property"}}, "description": "The core class for Q.  This constructor can be\ncalled like a function with an optional options parameter\nwhich overrides default configuration."}, "Q.Ajax": {"name": "Q.Ajax", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration.  The type, contentType, url, and accepts\nproperties are required.\nAn object containing the options attributes.\nMembers of this options object include:\n<ul>\n<li><strong>string type:</strong> The request method.</li>\n<li><strong>string contentType:</strong> Request content type.</li>\n<li><strong>string accepts:</strong> Allowed response content types\n(separated by comma).</li>\n<li><strong>boolean cache:</strong> Use the browser's cache if\navailable.  \"False\" appends a random string to the url requested.</li>\n<li><strong>string url:</strong> Url to request.</li>\n</ul>"}], "description": "This class creates objects that communicate using an\nXMLHttpRequest object."}], "namespace": "Q", "module": "Q", "methods": {"execute": {"description": "Creates and sends the XMLHttpRequest using the object's\nconfiguration information.", "guessedname": "execute", "guessedtype": "function"}, "dataHandler": {"return": {"type": "Function", "description": ""}, "description": "Handles the response from an Ajax call", "guessedname": "dataHandler", "guessedtype": "function"}}, "extends": "Q.Class", "superclass": "Q.Class", "file": "protoQ.js", "shortname": "Ajax", "description": "This class creates objects that communicate using an\nXMLHttpRequest object."}, "Q.Sql.Drop": {"name": "Q.Sql.Drop", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration.  The tableName property is replaced\nat execution time."}], "description": "This class creates a SQL drop table request object"}], "namespace": "Q.Sql", "module": "Q", "extends": "Q.Sql", "superclass": "Q.Sql", "file": "protoQ.js", "shortname": "Drop", "description": "This class creates a SQL drop table request object"}, "Q.Test": {"name": "Q.Test", "constructors": [{"params": [{"type": "Object} the options object overrides\ndefault configuration.  The test {Object} property has\na fn {Function", "name": "options", "description": "  property which is invoked during\nexecution.  The test.fn returns to the results property.\nIf the results property === the test.expects property,\nthe object's status property is \"passed\" otherwise the\nstatus is \"failed\".\nAn object containing the options attributes.\nMembers of this options object include:\n<ul>\n<li><strong>object test: | array test:</strong> The test group.</li>\n</ul>\nThe test object's properties include:\n<ul>\n<li><strong>function fn:</strong> The function will evaluate at time of\nexecution.</li>\n<li><strong>any expects:</strong> The value to compare (===) to the \"fn\"\nproperty function's return value.</li>\n</ul>\nThe test array is an array of objects like the one above with an fn property\nand an expects property.  The test status will be \"passed\" only if all tests\npass."}], "description": "A class for constructing Test objects"}], "namespace": "Q", "module": "Q", "methods": {"execute": {"description": "Invokes the configured test function, evaluates the\nresults, then advances the request queue.", "guessedname": "execute", "guessedtype": "function"}}, "extends": "Q.Class", "superclass": "Q.Class", "file": "protoQ.js", "shortname": "Test", "description": "A class for constructing Test objects"}, "Q.Script": {"shortname": "Script", "namespace": "Q", "name": "Q.Script", "methods": {"execute": {"description": "Creates the worker object and sends the configured\nmessage to the configured url.", "guessedname": "execute", "guessedtype": "function"}, "dataHandler": {"return": {"type": "Fucntion", "description": ""}, "description": "Advances the request queue once the response message is\nrecieved wait number of times.  The reponse should be\nvalid JSON.", "guessedname": "dataHandler", "guessedtype": "function"}}}, "Q.Storage.Session": {"name": "Q.Storage.Session", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration."}], "description": "This class creates a sessionStorage request object"}], "namespace": "Q.Storage", "module": "Q", "extends": "Q.Storage", "superclass": "Q.Storage", "file": "protoQ.js", "shortname": "Session", "description": "This class creates a sessionStorage request object"}, "Q.Storage": {"name": "Q.Storage", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  the options object overrides\ndefault configuration.  An action property is required.  The\nproperties key and value are needed for most actions.  Valid\nactions are documented in the HTML5 Storage API.  The expects\nproperty will be used as a default value if the store[key] value\nis undefined.\nAn object containing the options attributes.\nMembers of this options object include:\n<ul>\n<li><strong>string action:</strong> The action execute: \"setItem\",\n\"getItem\", \"clear\", \"key\", \"length\", \"removeItem\".</li>\n<li><strong>string key:</strong> The key used by action.</li>\n<li><strong>any value:</strong> The value (for \"setItem\").</li>\n<li><strong>string expects:</strong> The default value used if no\nkey or a falsey value is found in the storage object (for \"getItem\").</li>\n<li><strong>object store:</strong> The object to use for storage.</li>\n</ul>"}], "description": "This class creates objects that communicate with a storage\nobject converting all data to type {String} on setItem\nand converting those strings to their natural primitive type\non getItem actions.  Other actions follow the HTML5 Storage\nAPI specification."}], "namespace": "Q", "module": "Q", "methods": {"execute": {"description": "Executes the configured action against the\nconfigured store using the configured value as\na parameter if needed.", "guessedname": "execute", "guessedtype": "function"}}, "extends": "Q.Class", "superclass": "Q.Class", "file": "protoQ.js", "shortname": "Storage", "description": "This class creates objects that communicate with a storage\nobject converting all data to type {String} on setItem\nand converting those strings to their natural primitive type\non getItem actions.  Other actions follow the HTML5 Storage\nAPI specification."}, "Q.Sql": {"name": "Q.Sql", "constructors": [{"params": [{"type": "Object} override any of the default database settings.\nAn object containing the options attributes for\na SQL statement. Members of this options object include:\n<ul>\n<li><strong>str stmt:</strong> SQL statement with optional placeholders.\nPlaceholders are replaced at execute time using the configuration (defaults\noverridden by this options object).  For instance, to use a statement like\n\"SELECT * FROM {tableName}\" add the tableName property to this options object\nwith a string value of the table name to select from.  Nested parameters are\nresolved converting \":\" to bracket notation.  For example, {table:1", "name": "options", "description": "  will\nresolve to table[1] in the configuration.</li>\n<li><strong>array args:</strong> Arguments replace \"?\" in SQL statements\nduring the database transaction.  See <a href=\"http://www.sqlite.org/\">SQLite</a>\ndocumentation.</li>\n</ul>"}], "description": "This class creates objects that will connect to a SQLite\ndatabase in thier execute method.  The stmt option can have\nplaceholders using {propertyName[:propertyName...]} notation.\nPlaceholders will resolve during execution and serve to allow\ncloning with fewer property replacements."}], "namespace": "Q", "module": "Q", "methods": {"execute": {"description": "Executes the SQL statement described by the object's\nconfiguration.", "guessedname": "execute", "guessedtype": "function"}, "errorHandler": {"return": {"type": "Function", "description": ""}, "description": "Handles errors returned by the SQLite database\nsending the error information to the console\nand moving to the next request item in the queue.", "guessedname": "errorHandler", "guessedtype": "function"}, "dataHandler": {"return": {"type": "Function", "description": ""}, "description": "Handles data returned from the SQLite database by\nconverting the results to an array and assigning the\narray to the object's results property.", "guessedname": "dataHandler", "guessedtype": "function"}}, "extends": "Q.Class", "superclass": "Q.Class", "file": "protoQ.js", "shortname": "Sql", "description": "This class creates objects that will connect to a SQLite\ndatabase in thier execute method.  The stmt option can have\nplaceholders using {propertyName[:propertyName...]} notation.\nPlaceholders will resolve during execution and serve to allow\ncloning with fewer property replacements."}, "Q.Db": {"name": "Q.Db", "constructors": [{"params": [{"type": "Object", "name": "options", "description": "  override any of the default database settings.\nAn object containing the options attributes for\na database. Members of this options object include:\n<ul>\n<li><strong>str shortName:</strong> Database one-word name.</li>\n<li><strong>str version:</strong> Database version.</li>\n<li><strong>str displayName:</strong> Database name.</li>\n<li><strong>number maxsize:</strong> Maximum size in byts.</li>\n</ul>"}], "description": "The Db class creates a singleton object to connect to\nan HTML5 SQLite database.  This class does not inherit\nthe methods of Class.  Instead, other classes rely on the\nQ.Db.instance and will instantiate the singleton as needed.\nThis class can be invoked like a function passing override\noptions as a parameter."}], "namespace": "Q", "module": "Q", "methods": {"connect": {"description": "Connects this instance to the SQLite database\ndescribed by the class defaults", "guessedname": "connect", "guessedtype": "function"}}, "file": "protoQ.js", "shortname": "Db", "description": "The Db class creates a singleton object to connect to\nan HTML5 SQLite database.  This class does not inherit\nthe methods of Class.  Instead, other classes rely on the\nQ.Db.instance and will instantiate the singleton as needed.\nThis class can be invoked like a function passing override\noptions as a parameter."}}, "version": "1.0.0", "namespaces": ["Q", "Q.Dom", "Q.Sql", "Q.Storage"]}